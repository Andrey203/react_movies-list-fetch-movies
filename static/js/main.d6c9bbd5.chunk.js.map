{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","moviesIdList","addMovie","useState","inputValue","setInputValue","searchError","setSearchError","setMovie","moviesId","onSubmit","event","preventDefault","fetch","then","response","json","Response","Error","film","includes","imdbID","newMovie","Title","Plot","Poster","catch","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","state","data","getMoviesId","isIncludes","some","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6c9bbd5.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes, { string } from 'prop-types';\n\nimport { getMovie } from '../../api/api';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport movies from '../../api/movies.json';\n\n// const moviesTitle = movies.map(movie => movie.title);\n\nexport const FindMovie = ({ moviesIdList, addMovie }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [searchError, setSearchError] = useState(false);\n  const [movie, setMovie] = useState(movies[0]);\n  const [moviesId] = useState(moviesIdList);\n\n  const inputValueHandler = (event) => {\n    setInputValue(event.target.value);\n    if (searchError) {\n      setSearchError(false);\n    }\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    getMovie(inputValue)\n      .then((response) => {\n        if (response.Response === 'False') {\n          throw new Error();\n        }\n\n        return response;\n      })\n      .then((film) => {\n        if (moviesId.includes(film.imdbID)) {\n          setMovie('The movie has already exist');\n\n          return 'The movie has already exist';\n        }\n\n        const newMovie = {\n          title: film.Title,\n          description: film.Plot,\n          imgUrl: film.Poster,\n          imdbUrl: `https://www.imdb.com/title/${film.imdbID}`,\n          imdbId: film.imdbID,\n        };\n\n        setMovie(newMovie);\n\n        return film;\n      })\n      .catch(() => {\n        setSearchError(true);\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={inputValue}\n              onChange={inputValueHandler}\n            />\n          </div>\n\n          {searchError && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addMovie(movie)}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {typeof movie === 'string' && <p>{movie}</p>}\n        {typeof movie === 'object' && <MovieCard {...movie} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  moviesIdList: PropTypes.arrayOf(string).isRequired,\n};\n","// eslint-disable-next-line\nexport const getMovie = title => fetch(`https://www.omdbapi.com/?apikey=43477d2c&t=${title}`)\n  .then(response => response.json());\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  getMoviesId = movies => movies.map(movie => movie.imdbId)\n\n  addMovie = (movie) => {\n    const isIncludes = this.state.movies\n      .some(film => film.imdbId === movie.imdbId);\n\n    if (!movie || typeof movie === 'string' || isIncludes) {\n      return;\n    }\n\n    this.setState(state => ({ movies: [...state.movies, movie] }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            addMovie={this.addMovie}\n            moviesIdList={this.getMoviesId(movies)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}